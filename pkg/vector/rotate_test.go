package vector

import (
	"fmt"
	"reflect"
	"testing"

	"github.com/anubis-game/apiserver/pkg/object"
)

func Test_Vector_Rotate(t *testing.T) {
	testCases := []struct {
		obj []object.Object
		hea object.Object
		rot []object.Object
	}{
		// Case 000, x+3 y+4
		{
			obj: []object.Object{
				{X: 621_362, Y: 539_077},
				{X: 621_359, Y: 539_073},
			},
			hea: object.Object{X: 621_365, Y: 539_081},
			rot: []object.Object{
				{X: 621_365, Y: 539_081},
				{X: 621_362, Y: 539_077},
			},
		},
		// Case 001, y-5
		{
			obj: []object.Object{
				{X: 621_359, Y: 539_068},
				{X: 621_359, Y: 539_073},
			},
			hea: object.Object{X: 621_359, Y: 539_063},
			rot: []object.Object{
				{X: 621_359, Y: 539_063},
				{X: 621_359, Y: 539_068},
			},
		},
		// Case 002, x-5
		{
			obj: []object.Object{
				{X: 621_354, Y: 539_073},
				{X: 621_349, Y: 539_073},
			},
			hea: object.Object{X: 621_359, Y: 539_073},
			rot: []object.Object{
				{X: 621_359, Y: 539_073},
				{X: 621_354, Y: 539_073},
			},
		},
		// Case 003, x-4 y+3
		{
			obj: []object.Object{
				{X: 621_355, Y: 539_076},
				{X: 621_351, Y: 539_079},
			},
			hea: object.Object{X: 621_359, Y: 539_073},
			rot: []object.Object{
				{X: 621_359, Y: 539_073},
				{X: 621_355, Y: 539_076},
			},
		},
	}

	for i, tc := range testCases {
		t.Run(fmt.Sprintf("%03d", i), func(t *testing.T) {
			var vec *Vector
			{
				vec = New(Config{
					Obj: tc.obj,
				})
			}

			vec.Rotate(tc.hea)

			if !reflect.DeepEqual(vec.hea.val, tc.hea) {
				t.Fatalf("expected %#v got %#v", tc.hea, vec.hea.val)
			}
		})
	}
}

func Benchmark_Vector_Rotate(b *testing.B) {
	testCases := []struct {
		obj []object.Object
		hea object.Object
	}{
		// Case 000, ~54.00 ns/op
		{
			obj: []object.Object{
				{X: 621_362, Y: 539_077},
				{X: 621_359, Y: 539_073},
			},
			hea: object.Object{X: 621_365, Y: 539_081},
		},
		// Case 001, ~54.00 ns/op
		{
			obj: []object.Object{
				{X: 621_359, Y: 539_068},
				{X: 621_359, Y: 539_073},
			},
			hea: object.Object{X: 621_359, Y: 539_063},
		},
		// Case 002, ~54.00 ns/op
		{
			obj: []object.Object{
				{X: 621_354, Y: 539_073},
				{X: 621_349, Y: 539_073},
			},
			hea: object.Object{X: 621_359, Y: 539_073},
		},
		// Case 003, ~54.00 ns/op
		{
			obj: []object.Object{
				{X: 621_355, Y: 539_076},
				{X: 621_351, Y: 539_079},
			},
			hea: object.Object{X: 621_359, Y: 539_073},
		},
	}

	for i, tc := range testCases {
		b.Run(fmt.Sprintf("%03d", i), func(b *testing.B) {
			var vec *Vector
			{
				vec = New(Config{
					Obj: tc.obj,
				})
			}

			for b.Loop() {
				vec.Rotate(tc.hea)
			}
		})
	}
}

func Benchmark_Vector_Rotate_Big(b *testing.B) {
	var vec *Vector
	{
		vec = New(Config{
			Obj: []object.Object{

				{X: 499, Y: 499},
				{X: 498, Y: 498},
				{X: 497, Y: 497},
				{X: 496, Y: 496},
				{X: 495, Y: 495},
				{X: 494, Y: 494},
				{X: 493, Y: 493},
				{X: 492, Y: 492},
				{X: 491, Y: 491},
				{X: 490, Y: 490},

				{X: 489, Y: 489},
				{X: 488, Y: 488},
				{X: 487, Y: 487},
				{X: 486, Y: 486},
				{X: 485, Y: 485},
				{X: 484, Y: 484},
				{X: 483, Y: 483},
				{X: 482, Y: 482},
				{X: 481, Y: 481},
				{X: 480, Y: 480},

				{X: 479, Y: 479},
				{X: 478, Y: 478},
				{X: 477, Y: 477},
				{X: 476, Y: 476},
				{X: 475, Y: 475},
				{X: 474, Y: 474},
				{X: 473, Y: 473},
				{X: 472, Y: 472},
				{X: 471, Y: 471},
				{X: 470, Y: 470},

				{X: 469, Y: 469},
				{X: 468, Y: 468},
				{X: 467, Y: 467},
				{X: 466, Y: 466},
				{X: 465, Y: 465},
				{X: 464, Y: 464},
				{X: 463, Y: 463},
				{X: 462, Y: 462},
				{X: 461, Y: 461},
				{X: 460, Y: 460},

				{X: 459, Y: 459},
				{X: 458, Y: 458},
				{X: 457, Y: 457},
				{X: 456, Y: 456},
				{X: 455, Y: 455},
				{X: 454, Y: 454},
				{X: 453, Y: 453},
				{X: 452, Y: 452},
				{X: 451, Y: 451},
				{X: 450, Y: 450},

				{X: 449, Y: 449},
				{X: 448, Y: 448},
				{X: 447, Y: 447},
				{X: 446, Y: 446},
				{X: 445, Y: 445},
				{X: 444, Y: 444},
				{X: 443, Y: 443},
				{X: 442, Y: 442},
				{X: 441, Y: 441},
				{X: 440, Y: 440},

				{X: 439, Y: 439},
				{X: 438, Y: 438},
				{X: 437, Y: 437},
				{X: 436, Y: 436},
				{X: 435, Y: 435},
				{X: 434, Y: 434},
				{X: 433, Y: 433},
				{X: 432, Y: 432},
				{X: 431, Y: 431},
				{X: 430, Y: 430},

				{X: 429, Y: 429},
				{X: 428, Y: 428},
				{X: 427, Y: 427},
				{X: 426, Y: 426},
				{X: 425, Y: 425},
				{X: 424, Y: 424},
				{X: 423, Y: 423},
				{X: 422, Y: 422},
				{X: 421, Y: 421},
				{X: 420, Y: 420},

				{X: 419, Y: 419},
				{X: 418, Y: 418},
				{X: 417, Y: 417},
				{X: 416, Y: 416},
				{X: 415, Y: 415},
				{X: 414, Y: 414},
				{X: 413, Y: 413},
				{X: 412, Y: 412},
				{X: 411, Y: 411},
				{X: 410, Y: 410},

				{X: 409, Y: 409},
				{X: 408, Y: 408},
				{X: 407, Y: 407},
				{X: 406, Y: 406},
				{X: 405, Y: 405},
				{X: 404, Y: 404},
				{X: 403, Y: 403},
				{X: 402, Y: 402},
				{X: 401, Y: 401},
				{X: 400, Y: 400},

				{X: 399, Y: 399},
				{X: 398, Y: 398},
				{X: 397, Y: 397},
				{X: 396, Y: 396},
				{X: 395, Y: 395},
				{X: 394, Y: 394},
				{X: 393, Y: 393},
				{X: 392, Y: 392},
				{X: 391, Y: 391},
				{X: 390, Y: 390},

				{X: 389, Y: 389},
				{X: 388, Y: 388},
				{X: 387, Y: 387},
				{X: 386, Y: 386},
				{X: 385, Y: 385},
				{X: 384, Y: 384},
				{X: 383, Y: 383},
				{X: 382, Y: 382},
				{X: 381, Y: 381},
				{X: 380, Y: 380},

				{X: 379, Y: 379},
				{X: 378, Y: 378},
				{X: 377, Y: 377},
				{X: 376, Y: 376},
				{X: 375, Y: 375},
				{X: 374, Y: 374},
				{X: 373, Y: 373},
				{X: 372, Y: 372},
				{X: 371, Y: 371},
				{X: 370, Y: 370},

				{X: 369, Y: 369},
				{X: 368, Y: 368},
				{X: 367, Y: 367},
				{X: 366, Y: 366},
				{X: 365, Y: 365},
				{X: 364, Y: 364},
				{X: 363, Y: 363},
				{X: 362, Y: 362},
				{X: 361, Y: 361},
				{X: 360, Y: 360},

				{X: 359, Y: 359},
				{X: 358, Y: 358},
				{X: 357, Y: 357},
				{X: 356, Y: 356},
				{X: 355, Y: 355},
				{X: 354, Y: 354},
				{X: 353, Y: 353},
				{X: 352, Y: 352},
				{X: 351, Y: 351},
				{X: 350, Y: 350},

				{X: 349, Y: 349},
				{X: 348, Y: 348},
				{X: 347, Y: 347},
				{X: 346, Y: 346},
				{X: 345, Y: 345},
				{X: 344, Y: 344},
				{X: 343, Y: 343},
				{X: 342, Y: 342},
				{X: 341, Y: 341},
				{X: 340, Y: 340},

				{X: 339, Y: 339},
				{X: 338, Y: 338},
				{X: 337, Y: 337},
				{X: 336, Y: 336},
				{X: 335, Y: 335},
				{X: 334, Y: 334},
				{X: 333, Y: 333},
				{X: 332, Y: 332},
				{X: 331, Y: 331},
				{X: 330, Y: 330},

				{X: 329, Y: 329},
				{X: 328, Y: 328},
				{X: 327, Y: 327},
				{X: 326, Y: 326},
				{X: 325, Y: 325},
				{X: 324, Y: 324},
				{X: 323, Y: 323},
				{X: 322, Y: 322},
				{X: 321, Y: 321},
				{X: 320, Y: 320},

				{X: 319, Y: 319},
				{X: 318, Y: 318},
				{X: 317, Y: 317},
				{X: 316, Y: 316},
				{X: 315, Y: 315},
				{X: 314, Y: 314},
				{X: 313, Y: 313},
				{X: 312, Y: 312},
				{X: 311, Y: 311},
				{X: 310, Y: 310},

				{X: 309, Y: 309},
				{X: 308, Y: 308},
				{X: 307, Y: 307},
				{X: 306, Y: 306},
				{X: 305, Y: 305},
				{X: 304, Y: 304},
				{X: 303, Y: 303},
				{X: 302, Y: 302},
				{X: 301, Y: 301},
				{X: 300, Y: 300},

				{X: 299, Y: 299},
				{X: 298, Y: 298},
				{X: 297, Y: 297},
				{X: 296, Y: 296},
				{X: 295, Y: 295},
				{X: 294, Y: 294},
				{X: 293, Y: 293},
				{X: 292, Y: 292},
				{X: 291, Y: 291},
				{X: 290, Y: 290},

				{X: 289, Y: 289},
				{X: 288, Y: 288},
				{X: 287, Y: 287},
				{X: 286, Y: 286},
				{X: 285, Y: 285},
				{X: 284, Y: 284},
				{X: 283, Y: 283},
				{X: 282, Y: 282},
				{X: 281, Y: 281},
				{X: 280, Y: 280},

				{X: 279, Y: 279},
				{X: 278, Y: 278},
				{X: 277, Y: 277},
				{X: 276, Y: 276},
				{X: 275, Y: 275},
				{X: 274, Y: 274},
				{X: 273, Y: 273},
				{X: 272, Y: 272},
				{X: 271, Y: 271},
				{X: 270, Y: 270},

				{X: 269, Y: 269},
				{X: 268, Y: 268},
				{X: 267, Y: 267},
				{X: 266, Y: 266},
				{X: 265, Y: 265},
				{X: 264, Y: 264},
				{X: 263, Y: 263},
				{X: 262, Y: 262},
				{X: 261, Y: 261},
				{X: 260, Y: 260},

				{X: 259, Y: 259},
				{X: 258, Y: 258},
				{X: 257, Y: 257},
				{X: 256, Y: 256},
				{X: 255, Y: 255},
				{X: 254, Y: 254},
				{X: 253, Y: 253},
				{X: 252, Y: 252},
				{X: 251, Y: 251},
				{X: 250, Y: 250},

				{X: 249, Y: 249},
				{X: 248, Y: 248},
				{X: 247, Y: 247},
				{X: 246, Y: 246},
				{X: 245, Y: 245},
				{X: 244, Y: 244},
				{X: 243, Y: 243},
				{X: 242, Y: 242},
				{X: 241, Y: 241},
				{X: 240, Y: 240},

				{X: 239, Y: 239},
				{X: 238, Y: 238},
				{X: 237, Y: 237},
				{X: 236, Y: 236},
				{X: 235, Y: 235},
				{X: 234, Y: 234},
				{X: 233, Y: 233},
				{X: 232, Y: 232},
				{X: 231, Y: 231},
				{X: 230, Y: 230},

				{X: 229, Y: 229},
				{X: 228, Y: 228},
				{X: 227, Y: 227},
				{X: 226, Y: 226},
				{X: 225, Y: 225},
				{X: 224, Y: 224},
				{X: 223, Y: 223},
				{X: 222, Y: 222},
				{X: 221, Y: 221},
				{X: 220, Y: 220},

				{X: 219, Y: 219},
				{X: 218, Y: 218},
				{X: 217, Y: 217},
				{X: 216, Y: 216},
				{X: 215, Y: 215},
				{X: 214, Y: 214},
				{X: 213, Y: 213},
				{X: 212, Y: 212},
				{X: 211, Y: 211},
				{X: 210, Y: 210},

				{X: 209, Y: 209},
				{X: 208, Y: 208},
				{X: 207, Y: 207},
				{X: 206, Y: 206},
				{X: 205, Y: 205},
				{X: 204, Y: 204},
				{X: 203, Y: 203},
				{X: 202, Y: 202},
				{X: 201, Y: 201},
				{X: 200, Y: 200},

				{X: 199, Y: 199},
				{X: 198, Y: 198},
				{X: 197, Y: 197},
				{X: 196, Y: 196},
				{X: 195, Y: 195},
				{X: 194, Y: 194},
				{X: 193, Y: 193},
				{X: 192, Y: 192},
				{X: 191, Y: 191},
				{X: 190, Y: 190},

				{X: 189, Y: 189},
				{X: 188, Y: 188},
				{X: 187, Y: 187},
				{X: 186, Y: 186},
				{X: 185, Y: 185},
				{X: 184, Y: 184},
				{X: 183, Y: 183},
				{X: 182, Y: 182},
				{X: 181, Y: 181},
				{X: 180, Y: 180},

				{X: 179, Y: 179},
				{X: 178, Y: 178},
				{X: 177, Y: 177},
				{X: 176, Y: 176},
				{X: 175, Y: 175},
				{X: 174, Y: 174},
				{X: 173, Y: 173},
				{X: 172, Y: 172},
				{X: 171, Y: 171},
				{X: 170, Y: 170},

				{X: 169, Y: 169},
				{X: 168, Y: 168},
				{X: 167, Y: 167},
				{X: 166, Y: 166},
				{X: 165, Y: 165},
				{X: 164, Y: 164},
				{X: 163, Y: 163},
				{X: 162, Y: 162},
				{X: 161, Y: 161},
				{X: 160, Y: 160},

				{X: 159, Y: 159},
				{X: 158, Y: 158},
				{X: 157, Y: 157},
				{X: 156, Y: 156},
				{X: 155, Y: 155},
				{X: 154, Y: 154},
				{X: 153, Y: 153},
				{X: 152, Y: 152},
				{X: 151, Y: 151},
				{X: 150, Y: 150},

				{X: 149, Y: 149},
				{X: 148, Y: 148},
				{X: 147, Y: 147},
				{X: 146, Y: 146},
				{X: 145, Y: 145},
				{X: 144, Y: 144},
				{X: 143, Y: 143},
				{X: 142, Y: 142},
				{X: 141, Y: 141},
				{X: 140, Y: 140},

				{X: 139, Y: 139},
				{X: 138, Y: 138},
				{X: 137, Y: 137},
				{X: 136, Y: 136},
				{X: 135, Y: 135},
				{X: 134, Y: 134},
				{X: 133, Y: 133},
				{X: 132, Y: 132},
				{X: 131, Y: 131},
				{X: 130, Y: 130},

				{X: 129, Y: 129},
				{X: 128, Y: 128},
				{X: 127, Y: 127},
				{X: 126, Y: 126},
				{X: 125, Y: 125},
				{X: 124, Y: 124},
				{X: 123, Y: 123},
				{X: 122, Y: 122},
				{X: 121, Y: 121},
				{X: 120, Y: 120},

				{X: 119, Y: 119},
				{X: 118, Y: 118},
				{X: 117, Y: 117},
				{X: 116, Y: 116},
				{X: 115, Y: 115},
				{X: 114, Y: 114},
				{X: 113, Y: 113},
				{X: 112, Y: 112},
				{X: 111, Y: 111},
				{X: 110, Y: 110},

				{X: 109, Y: 109},
				{X: 108, Y: 108},
				{X: 107, Y: 107},
				{X: 106, Y: 106},
				{X: 105, Y: 105},
				{X: 104, Y: 104},
				{X: 103, Y: 103},
				{X: 102, Y: 102},
				{X: 101, Y: 101},
				{X: 100, Y: 100},

				{X: 99, Y: 99},
				{X: 98, Y: 98},
				{X: 97, Y: 97},
				{X: 96, Y: 96},
				{X: 95, Y: 95},
				{X: 94, Y: 94},
				{X: 93, Y: 93},
				{X: 92, Y: 92},
				{X: 91, Y: 91},
				{X: 90, Y: 90},

				{X: 89, Y: 89},
				{X: 88, Y: 88},
				{X: 87, Y: 87},
				{X: 86, Y: 86},
				{X: 85, Y: 85},
				{X: 84, Y: 84},
				{X: 83, Y: 83},
				{X: 82, Y: 82},
				{X: 81, Y: 81},
				{X: 80, Y: 80},

				{X: 79, Y: 79},
				{X: 78, Y: 78},
				{X: 77, Y: 77},
				{X: 76, Y: 76},
				{X: 75, Y: 75},
				{X: 74, Y: 74},
				{X: 73, Y: 73},
				{X: 72, Y: 72},
				{X: 71, Y: 71},
				{X: 70, Y: 70},

				{X: 69, Y: 69},
				{X: 68, Y: 68},
				{X: 67, Y: 67},
				{X: 66, Y: 66},
				{X: 65, Y: 65},
				{X: 64, Y: 64},
				{X: 63, Y: 63},
				{X: 62, Y: 62},
				{X: 61, Y: 61},
				{X: 60, Y: 60},

				{X: 59, Y: 59},
				{X: 58, Y: 58},
				{X: 57, Y: 57},
				{X: 56, Y: 56},
				{X: 55, Y: 55},
				{X: 54, Y: 54},
				{X: 53, Y: 53},
				{X: 52, Y: 52},
				{X: 51, Y: 51},
				{X: 50, Y: 50},

				{X: 49, Y: 49},
				{X: 48, Y: 48},
				{X: 47, Y: 47},
				{X: 46, Y: 46},
				{X: 45, Y: 45},
				{X: 44, Y: 44},
				{X: 43, Y: 43},
				{X: 42, Y: 42},
				{X: 41, Y: 41},
				{X: 40, Y: 40},

				{X: 39, Y: 39},
				{X: 38, Y: 38},
				{X: 37, Y: 37},
				{X: 36, Y: 36},
				{X: 35, Y: 35},
				{X: 34, Y: 34},
				{X: 33, Y: 33},
				{X: 32, Y: 32},
				{X: 31, Y: 31},
				{X: 30, Y: 30},

				{X: 29, Y: 29},
				{X: 28, Y: 28},
				{X: 27, Y: 27},
				{X: 26, Y: 26},
				{X: 25, Y: 25},
				{X: 24, Y: 24},
				{X: 23, Y: 23},
				{X: 22, Y: 22},
				{X: 21, Y: 21},
				{X: 20, Y: 20},

				{X: 19, Y: 19},
				{X: 18, Y: 18},
				{X: 17, Y: 17},
				{X: 16, Y: 16},
				{X: 15, Y: 15},
				{X: 14, Y: 14},
				{X: 13, Y: 13},
				{X: 12, Y: 12},
				{X: 11, Y: 11},
				{X: 10, Y: 10},

				{X: 9, Y: 9},
				{X: 8, Y: 8},
				{X: 7, Y: 7},
				{X: 6, Y: 6},
				{X: 5, Y: 5},
				{X: 4, Y: 4},
				{X: 3, Y: 3},
				{X: 2, Y: 2},
				{X: 1, Y: 1},
				{X: 0, Y: 0},
			},
		})
	}

	hea := object.Object{X: 621_359, Y: 539_073}

	b.Run(fmt.Sprintf("%03d", 0), func(b *testing.B) {
		for b.Loop() {
			// ~90.00 ns/op
			vec.Rotate(hea)
		}
	})
}
